GEBRUIKT!!!

1 
useful and correct inheritance (explain why)
- een basis class en een afgeleide class
- https://www.geeksforgeeks.org/inheritance-in-c/
UITLEG: waar? en waarom?
- dit wordt gebruikt bij de klasse boot.h

2 
useful and correct object composition (explain why)
- https://www.geeksforgeeks.org/introduction-to-complex-objects-and-composition/
GEBRUIK: 
- dit wordt gebruikt bij de klasse boot.h

3 
useful and correct multiple inheritance (explain why)
- https://www.geeksforgeeks.org/inheritance-in-c/
GEBRUIK: 
- dit wordt gebruikt bij de klasse boot.h en bij onderliggende klassen

4
correct base class (van inheritance)
GEBRUIK:
- dit wordt gebruikt bij de klasse boot.h

5
member initialization in constructors (the stuff behind a colon)
GEBRUIK:
- wordt gebruikt in boot.h = constructor met ':'

6
separate header files

7
useful and correct encapsulation (explain why)
GEBRUIK:
- in boot.h, de variabellen staan in protected maar ze kunnen nog opgevraagd worden door de get...

8
at least 2 default constructors
- () is default, staat niet useful dus maak gewoon aan!!!
GEBRUIK:
- dit wordt gebruikt bij de klasse patrouilleschip.h en slagschip.h

9
at least 2 specific constructors
- moet iets tussen de () staan, staat niet useful dus maak gewoon aan!!!
GEBRUIK:
- dit wordt gebruikt bij de klasse patrouilleschip.h en slagschip.h

10
at least 2 destructors
GEBRUIK:
- wordt gebruikt in boot.h

11
useful usage of "this" (if the code does not work without it)
GEBRUIK:
- wordt gebruikt in boot.cpp

12
useful member variabel
GEBRUIK:
- boot.h

13
useful getters and setters for member variables
GEBRUIK:
- boot.cpp

14
useful string class usage
- std string
GEBRUIK:
- dit wordt gebruikt voor naamspeler

15
correct abstract base class
- https://www.geeksforgeeks.org/pure-virtual-functions-and-abstract-classes/
GEBRUIK: 
- dit wordt gebruikt bij de klasse abstractBaseClass.h

16
default values in function definition
- int sum(int x, int y, int z = 0, int w = 0)
GEBRUIK: 
- dit wordt gebruikt bij de klasse abstractBaseClass.cpp

17
useful member function
GEBRUIK:
- wordt gebruikt in boot.h en boot.cpp

18
everything in one or more self-made namespace(s)
- https://www.tutorialspoint.com/cplusplus/cpp_namespaces.htm
GEBRUIK:
- wordt overal gebruikt 

19
2 useful unsigned chars or other better usage of memory efficient type
- een type card bestaat niet => unsigned char
GEBRUIK:
- tekenen van rand rond het veld in BESTAND___ZOEKEN

20
correct and useful usage of command line parameters
GEBRUIK:
- wordt gebruikt in zeeslag.cpp

21
working build manual as readme on GitHub (project must be possible to build from scratch on a clean PC)
GEBRUIK:
- wordt gebruikt README.md

22


23


24


25

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
OPNIEUW BEKIJKEN:

useful virtual function
- gebruik de functie ook, niet alleen maken...
- https://www.geeksforgeeks.org/virtual-function-cpp/
GEBRUIK:
- wordt gebruikt in boot.h (virtual int getBreedte()) 
// opnieuw bekijken!!!!

useful proven (dynamic) polymorphism
- https://www.geeksforgeeks.org/polymorphism-in-c/

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NOG DOEN

clean main (i.e. nothing in the main that should be in a class)

useful class (explain why)

correct protections

no mistake in object-oriented programming

no globals, but statics if needed

using the best suited type on a lot of places (almost everywhere possible)

maintainability by clean uniform code style and good function naming and/or comments everywhere
- goede naamgeving is beter als commentaar

at least 4 useful bool
- (hit/!, gezonken/!, )





useful Qt class

useful container class
- std list

useful operator overloading

useful function overloading (non operator)

useful function overriding (non virtual)

useful template function or class

useful non-type template arguments

useful friend function or class
- friend kunnen aan private delen van friend...

correct usage of inline function

useful recursive function

useful usage of nullptr

useful usage of signals/slots

useful usage of lambda function

one complete project that compiles and does not crash

useful usage of an external library (not Qt)
- lib file

a nice extra that you think that should deserve grading (stuff you put time in and is not rewarded by an item above)

at least 4 useful const references

correctly using const in almost all places (almost everywhere possible)

useful pointer declaration and usage

dynamic memory allocation (new)

dynamic memory removing (delete)

2 useful (modern) call-by-references
- als argument ( &a , &b)



extra: 
- een blad met uitleg over de functie, is handig als gij tijdens de 10min uitleg vraagt
- 1-10 is basis!!!
- waar niet useful staat moet ge gewoon aanmaken...

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
GAAT NOOIT GEBRUIKT WORDEN: 

test-driven development (= written test plan or unit tests)

usage of a GUI

usage of OpenGL or other 3D engine

project that works with hardware

solved on 8 bug tickets

reported 8 bug tickets on other projects

useful usage of (modern) file-I/O
- std stream